name: Deploy Lambda Function to AWS

on:
  push:
    branches:
      - dev   # Run workflow on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment (adjust the version if needed)
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      # Step 3: Install dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r lambda/requirements.txt

      # Step 2: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      # Step 4: Package Lambda code
      - name: Zip Lambda code
        run: |
          cd lambda
          zip -r ../lambda-code.zip .   # Zips the contents of the lambda folder

      # Step 5: Upload the Lambda package to S3
      - name: Upload Lambda code to S3
        run: aws s3 cp lambda-code.zip s3://vmistry-f1-dashboard/lambda-code.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
          
      - name: Deploy CloudFormation stack
        id: deploy
        run: |
          aws cloudformation deploy \
            --template-file infrastructure/cloudformation.yml \
            --stack-name F1RaceInsightsStack \
            --capabilities CAPABILITY_NAMED_IAM

      - name: Check deployment status
        if: failure()  # This step runs only if the previous step fails
        run: |
          echo "Deployment failed. Fetching error message..."
          aws cloudformation describe-stack-events --stack-name F1RaceInsightsStack --output
          echo "Error Message Fetched, Deleting stack..."
          aws cloudformation delete-stack --stack-name F1RaceInsightsStack


